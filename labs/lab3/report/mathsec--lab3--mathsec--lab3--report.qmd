---
# Preamble

## Author
author:
  name: Кармацкий Никита Сергеевич
  degrees: BSc
  orcid: 0000-0002-0877-7063
  email: 1032259402@pfur.ru
  affiliation:
    - name: Российский университет дружбы народов
      country: Российская Федерация
      postal-code: 117198
      city: Москва
      address: ул. Миклухо-Маклая, д. 6
## Title
title: "Лабораторная работа №3"
subtitle: "Шифрование гаммированием"
license: "CC BY"
## Generic options
lang: ru-RU
number-sections: true
toc: true
toc-title: "Содержание"
toc-depth: 2
## Crossref customization
crossref:
  lof-title: "Список иллюстраций"
  lot-title: "Список таблиц"
  lol-title: "Листинги"
## Bibliography
bibliography:
  - bib/cite.bib
csl: _resources/csl/gost-r-7-0-5-2008-numeric.csl
## Formats
format:
### Pdf output format
  pdf:
    toc: true
    number-sections: true
    colorlinks: false
    toc-depth: 2
    lof: true # List of figures
    lot: true # List of tables
#### Document
    documentclass: scrreprt
    papersize: a4
    fontsize: 12pt
    linestretch: 1.5
#### Language
    babel-lang: russian
    babel-otherlangs: english
#### Biblatex
    cite-method: biblatex
    biblio-style: gost-numeric
    biblatexoptions:
      - backend=biber
      - langhook=extras
      - autolang=other*
#### Misc options
    csquotes: true
    indent: true
    header-includes: |
      \usepackage{indentfirst}
      \usepackage{float}
      \floatplacement{figure}{H}
      \usepackage[math,RM={Scale=0.94},SS={Scale=0.94},SScon={Scale=0.94},TT={Scale=MatchLowercase,FakeStretch=0.9},DefaultFeatures={Ligatures=Common}]{plex-otf}
      % --- Math fonts fallback: prefer plex-math; else unicode-math; else AMS ---
      \makeatletter
      \IfFileExists{plex-math.sty}{%
        \usepackage{plex-math}% IBM Plex Math if available
      }{%
        \IfFileExists{unicode-math.sty}{%
          \usepackage{unicode-math}% Unicode math
          \setmathfont{Latin Modern Math}% default math font
        }{%
          \usepackage{amsmath,amssymb}% classic math fallback
        }%
      }
      \makeatother
      % --- end fallback ---
### Docx output format
  docx:
    toc: true
    number-sections: true
    toc-depth: 2
---

# Цель работы

Цель работы -- изучить и реализовать шифры шифрование гаммированием.

# Задание

С помощью языка программирования Julia реализовать шифрования гаммированием конечной гаммой.

# Теоретическое введение

Julia — высокоуровневый свободный язык программирования с динамической типизацией, созданный для математических вычислений[JuliaLang]. Эффективен также и для написания программ общего назначения. Синтаксис языка схож с синтаксисом других математических языков, однако имеет некоторые существенные отличия.

Для выполнения заданий была использована официальная документация Julia[Julia Documentation].

# Выполнение лабораторной работы

1. Шифрование гаммированием — это симметричный метод шифрования, при котором к открытым данным (тексту) применяется операция наложения (обычно XOR) с последовательностью случайных чисел, называемой гаммой. Эта гамма должна быть не короче сообщения и обеспечивает обратимость операции, позволяя расшифровать данные при наличии той же гаммы. Такой метод обеспечивает высокую стойкость при условии использования случайной и одноразовой гаммы.


```julia
ALPHABET = collect("АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ")
function encrypt(text, key)
    filtered = [c for c in uppercase(text) if c in ALPHABET]
    key_chars = collect(uppercase(key))
    
    result = ""
    
    for i in 1:length(filtered)
        p_num = findfirst(==(filtered[i]), ALPHABET)
        k_num = findfirst(==(key_chars[(i-1) % length(key_chars) + 1]), ALPHABET)
        
        c_num = (p_num + k_num) % 33
        if c_num == 0
            c_num = 33
        end
        
        result *= ALPHABET[c_num]
    end
    
    return result
end
```


2. Для запуска программы используем функцию main():

```julia
function main()
    text1 = "ПРИКАЗ"
    key = "ГАММА"
    println("Текст:", text1)
    println("Ключ:", key)
    println("Криптограмма:", encrypt(text1, key))
end

main()
```

В результате работы программы получаем следующий результат(рис. @fig-001).
![Результат работы программы](image/image1.png){#fig-001 width="70%"}

# Выводы

В результате выполнения лабораторной работы познакомились с шифрованием гаммированием конечной гаммой и реализовали его на языке Julia.

# Список литературы{.unnumbered}

::: {#refs}
:::
